<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Keep Coding, Keep Climbing</title><link>https://keepcodingkeepclimbing.com/</link><description>programming and rock climbing</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 28 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://keepcodingkeepclimbing.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Python3からSQLiteを使う</title><link>https://keepcodingkeepclimbing.com/posts/sqlite-from-python3/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/sqlite-from-python3/</guid><description>Python 3にはSQLiteを扱うためのモジュールが付属している。 サンプルコードを書いたのでメモ。 step-by-stepで説明 1 2 dbname = &amp;#34;test.db&amp;#34; conn = sqlite3.connect(dbname) デー</description></item><item><title>TFRT(TensorFlow Runtime)をUbuntu 18.04 on WSLでビルドした</title><link>https://keepcodingkeepclimbing.com/posts/building-tensorflow-runtime/</link><pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/building-tensorflow-runtime/</guid><description>TFRT(TensorFlow Runtime)は、TensorFlowの新しい実行ランタイムでパフォーマンスが良いらしい。 Linux(WSL)上でビルドしたので、メモ。</description></item><item><title>yaml_cvによる履歴書PDFのビルドをGitHub Actionsでやる</title><link>https://keepcodingkeepclimbing.com/posts/resume-pdf-github-actions/</link><pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/resume-pdf-github-actions/</guid><description>履歴書PDFのビルド作業をGitHub Actionsで定義した。 リポジトリ自体はyaml_cvをクローンし、プライベートリポジトリとして作成</description></item><item><title>DNSレコードの種類</title><link>https://keepcodingkeepclimbing.com/posts/dns-record/</link><pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/dns-record/</guid><description>DNSレコードとは、DNSを動作させるための設定情報のこと。DNSサーバは、ドメイン名とIPアドレスの対応表である「ゾーンファイル」を保持し</description></item><item><title>Hugo+Github Pagesで新しい個人ウェブサイトを作った</title><link>https://keepcodingkeepclimbing.com/posts/new-website-with-hugo/</link><pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/new-website-with-hugo/</guid><description>HugoとGithub Pagesで個人ブログを作ったので作業メモ。 macOS Catalina 10.15.4で作業した。 手順 GitHub repositoryを作成 Hugoでサ</description></item><item><title>macOS Tips</title><link>https://keepcodingkeepclimbing.com/posts/macos-tips/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/macos-tips/</guid><description>随時追記する。 スクリーンショット取得 ディスプレイ全体のスクリーンショットをファイルに保存 command + shift + 3 ディスプレイ全体のスクリーンショットをクリ</description></item><item><title>macOSでRISC-V版FedoraをQEMUで起動する</title><link>https://keepcodingkeepclimbing.com/posts/boot-fedora-on-risc-v-qemu/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/boot-fedora-on-risc-v-qemu/</guid><description>macOS上のQEMUでRISC-V版Fedoraを動かしてみた。ビルド済みバイナリは下記から取得できるものを使用。 https://fedorapeople.org/groups/risc-v/disk-images/ 実施環境 macOS Catalina 10.15.4 brew</description></item><item><title>Rustで書かれた低レイヤOSS</title><link>https://keepcodingkeepclimbing.com/posts/rust-system-programming-oss/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/rust-system-programming-oss/</guid><description>Rustで書かれたOS、VMM、Bootloaderについて調べた。 OS Tock ARM Cortex-M、、STM32、RISC-Vで動く組み込みOS 論文</description></item><item><title>RaspbianにTensorFlow Lite 2.1とOpenCV 4を導入する</title><link>https://keepcodingkeepclimbing.com/posts/install-tflite-opencv-using-pyenv-on-raspbian/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/install-tflite-opencv-using-pyenv-on-raspbian/</guid><description>前回の記事で導入したRaspbian Busterに、TensorFlow LiteとOpenCVの環境を構築したのでメモ。 Python 3.7.7導入 1 2</description></item><item><title>Raspberry Pi 3にRaspbian Busterを導入する</title><link>https://keepcodingkeepclimbing.com/posts/install-raspbian-on-raspberrypi-3/</link><pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://keepcodingkeepclimbing.com/posts/install-raspbian-on-raspberrypi-3/</guid><description>Raspberry Pi 3 Model BにRaspbian Busterを導入したので作業メモ。 実施環境 MacBook Pro 13インチ 2017年モデル macOS Catalina 10.15.4 Raspberry Pi 3 Model B Raspbian Buster with desktop Raspbia</description></item></channel></rss>